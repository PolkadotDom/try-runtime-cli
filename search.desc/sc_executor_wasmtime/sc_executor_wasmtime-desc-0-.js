searchState.loadedDescShard("sc_executor_wasmtime", 0, "Defines a <code>WasmRuntime</code> that uses the Wasmtime JIT to …\nKnobs for deterministic stack height limiting.\nThe instantiation strategy to use for the WASM executor.\nPool the instances to avoid initializing everything from …\nPool the instances to avoid initializing everything from …\nRecreate the instance from scratch on every instantiation. …\nRecreate the instance from scratch on every instantiation. …\nA <code>WasmModule</code> implementation using wasmtime to compile the …\nThe WebAssembly standard requires all imports of an …\nA directory in which wasmtime can store its compiled …\nControls whether wasmtime should compile floating point in …\nCreate a new <code>WasmtimeRuntime</code> given the code. This function …\nThe same as <code>create_runtime</code> but takes a path to a …\nThe same as <code>create_runtime</code> but takes the bytes of a …\nSpecifying <code>Some</code> will enable deterministic stack height. …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nThe heap allocation strategy to use.\nThe instantiation strategy to use.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA number of logical “values” that can be pushed on the …\nThe maximum number of bytes for stack used by wasmtime …\nConfigures wasmtime to use multiple threads for compiling.\nTakes a <code>RuntimeBlob</code> and precompiles it returning the …\nTuning of various semantics of the wasmtime executor.\nEnables WASM Bulk Memory Operations proposal\nEnables WASM Multi-Value proposal\nEnables WASM Reference Types proposal\nEnables WASM Fixed-Width SIMD proposal")