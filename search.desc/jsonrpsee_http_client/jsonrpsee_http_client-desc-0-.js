searchState.loadedDescShard("jsonrpsee_http_client", 0, "jsonrpsee-http-client\nA set of HTTP headers\nRepresents an HTTP header field value.\nJSON-RPC HTTP Client that provides functionality to …\nHTTP client builder.\nInserts a key-value pair into the map.\nConverts a <code>HeaderValue</code> to a byte slice.\nBuild the HTTP client with target to connect to.\nCreate a builder for the HttpClient.\nReturns the number of headers the map can hold without …\nClears the map, removing all key-value pairs. Keeps the …\nReturns true if the map contains a value for the specified …\nClears the map, returning all entries as an iterator.\nGets the given key’s corresponding entry in the map for …\nExtend a <code>HeaderMap</code> with the contents of another <code>HeaderMap</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nAttempt to convert a byte slice to a <code>HeaderValue</code>.\nAttempt to convert a <code>Bytes</code> buffer to a <code>HeaderValue</code>.\nConvert a <code>Bytes</code> directly into a <code>HeaderValue</code> without …\nConverts a HeaderName into a HeaderValue\nConvert a static string to a <code>HeaderValue</code>.\nAttempt to convert a string to a <code>HeaderValue</code>.\nReturns a reference to the value associated with the key.\nReturns a view of all values associated with a key.\nReturns a mutable reference to the value associated with …\nConfigure the data type of the request object ID (default …\nPanics\nInserts a key-value pair into the map.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a consuming iterator, that is, one that moves keys …\nReturns true if the map contains no elements.\nReturns true if the <code>HeaderValue</code> has a length of zero bytes.\nReturns <code>true</code> if the value represents sensitive data.\nAn iterator visiting all key-value pairs.\nAn iterator visiting all key-value pairs, with mutable …\nAn iterator visiting all keys.\nReturns the number of keys stored in the map.\nReturns the number of headers stored in the map.\nReturns the length of <code>self</code>.\nSet max concurrent requests.\nSet the maximum size of a request body in bytes. Default …\nSet the maximum size of a response in bytes. Default is 10 …\nCreate a new builder.\nCreate an empty <code>HeaderMap</code>.\nRemoves a key from the map, returning the value associated …\nSet request timeout (default is 60 seconds).\nReserves capacity for at least <code>additional</code> more headers to …\nSet a custom header passed to the server with every …\nSet custom tower middleware.\nMax length for logging for requests and responses in …\nMark that the header value represents sensitive …\nConfigure <code>TCP_NODELAY</code> on the socket to the supplied value …\nSend a subscription request to the server. Not implemented …\nSubscribe to a specific method. Not implemented for HTTP; …\nYields a <code>&amp;str</code> slice if the <code>HeaderValue</code> only contains …\nHTTP transport.\nGets the given key’s corresponding entry in the map for …\nForce to use the rustls native certificate store.\nAn iterator visiting all values.\nAn iterator visiting all values mutably.\nCreate an empty <code>HeaderMap</code> with the specified capacity.\nError that can happen during a request.\nHyper client with http connector.\nError during the HTTP request, including networking errors …\nWrapper over HTTP transport and connector.\nHTTP Transport Client.\nBuilder for <code>HttpTransportClient</code>.\nHyper client with https connector.\nInvalid certificate store.\nServer returned a non-success status code.\nRequest body too large.\nInvalid URL.\nBuild a <code>HttpTransportClient</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSet the maximum size of a request body in bytes. Default …\nSet the maximum size of a response in bytes. Default is 10 …\nCreate a new <code>HttpTransportClientBuilder</code>.\nSet the certificate store.\nSet a custom header passed to the server with every …\nMax length for logging for requests and responses in …\nConfigure a tower service.\nConfigure <code>TCP_NODELAY</code> on the socket to the supplied value …\nHTTP Status code returned by the server.")