searchState.loadedDescShard("hyper_rustls", 0, "hyper-rustls\nMethods for configuring roots\nA stream over plain text.\nA stream protected with TLS.\nA Connector for the <code>https</code> scheme.\nA builder for an <code>HttpsConnector</code>\nA stream that might be protected with TLS.\nThis builds an <code>HttpsConnector</code> built on hyper’s default …\nThis builds an <code>HttpsConnector</code> built on hyper’s default …\nThe various states of the <code>HttpsConnectorBuilder</code>\nEnable all HTTP versions built into this library (enabled …\nEnable HTTP1\nEnable HTTP2\nEnable HTTP2\nForce the use of HTTPS when connecting.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nEnforce the use of HTTPS when connecting\nAllow both HTTPS and HTTP when connecting\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new <code>ConnectorBuilder</code>\nThis configures the platform’s trusted certs, as …\nShorthand for using rustls’ safe defaults and native …\nOverride server name for the TLS stack\nPasses a rustls <code>ClientConfig</code> to configure the TLS …\nThis wraps an arbitrary low-level connector into an …\nThis wraps an arbitrary low-level connector into an …\nState of a builder that needs to have some protocols …\nState of a builder with HTTP1 enabled, that may have some …\nState of a builder with HTTP2 (and possibly HTTP1) enabled\nState of a builder that needs schemes (https:// and …\nState of a builder that needs a TLS client config next\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")