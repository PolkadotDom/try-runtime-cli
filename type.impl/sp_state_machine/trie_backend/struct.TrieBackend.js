(function() {var type_impls = {
"sc_client_db":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsTrieBackend%3CH,+C%3E-for-TrieBackend%3CS,+H,+C%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_state_machine/trie_backend.rs.html#507\">source</a><a href=\"#impl-AsTrieBackend%3CH,+C%3E-for-TrieBackend%3CS,+H,+C%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, H, C&gt; <a class=\"trait\" href=\"sp_state_machine/backend/trait.AsTrieBackend.html\" title=\"trait sp_state_machine::backend::AsTrieBackend\">AsTrieBackend</a>&lt;H, C&gt; for <a class=\"struct\" href=\"sp_state_machine/trie_backend/struct.TrieBackend.html\" title=\"struct sp_state_machine::trie_backend::TrieBackend\">TrieBackend</a>&lt;S, H, C&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"sp_state_machine/trie_backend_essence/trait.TrieBackendStorage.html\" title=\"trait sp_state_machine::trie_backend_essence::TrieBackendStorage\">TrieBackendStorage</a>&lt;H&gt;,\n    H: <a class=\"trait\" href=\"hash_db/trait.Hasher.html\" title=\"trait hash_db::Hasher\">Hasher</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.TrieBackendStorage\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.TrieBackendStorage\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_state_machine/backend/trait.AsTrieBackend.html#associatedtype.TrieBackendStorage\" class=\"associatedtype\">TrieBackendStorage</a> = S</h4></section></summary><div class='docblock'>Type of trie backend storage.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_trie_backend\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_state_machine/trie_backend.rs.html#510\">source</a><a href=\"#method.as_trie_backend\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_state_machine/backend/trait.AsTrieBackend.html#tymethod.as_trie_backend\" class=\"fn\">as_trie_backend</a>(&amp;self) -&gt; &amp;<a class=\"struct\" href=\"sp_state_machine/trie_backend/struct.TrieBackend.html\" title=\"struct sp_state_machine::trie_backend::TrieBackend\">TrieBackend</a>&lt;S, H, C&gt;</h4></section></summary><div class='docblock'>Return the type as <a href=\"sp_state_machine/trie_backend/struct.TrieBackend.html\" title=\"struct sp_state_machine::trie_backend::TrieBackend\"><code>TrieBackend</code></a>.</div></details></div></details>","AsTrieBackend<H, C>","sc_client_db::DbState"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Backend%3CH%3E-for-TrieBackend%3CS,+H,+C%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_state_machine/trie_backend.rs.html#378-381\">source</a><a href=\"#impl-Backend%3CH%3E-for-TrieBackend%3CS,+H,+C%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, H, C&gt; <a class=\"trait\" href=\"sp_state_machine/backend/trait.Backend.html\" title=\"trait sp_state_machine::backend::Backend\">Backend</a>&lt;H&gt; for <a class=\"struct\" href=\"sp_state_machine/trie_backend/struct.TrieBackend.html\" title=\"struct sp_state_machine::trie_backend::TrieBackend\">TrieBackend</a>&lt;S, H, C&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"sp_state_machine/trie_backend_essence/trait.TrieBackendStorage.html\" title=\"trait sp_state_machine::trie_backend_essence::TrieBackendStorage\">TrieBackendStorage</a>&lt;H&gt;,\n    H: <a class=\"trait\" href=\"hash_db/trait.Hasher.html\" title=\"trait hash_db::Hasher\">Hasher</a>,\n    C: <a class=\"trait\" href=\"sp_state_machine/trie_backend/trait.TrieCacheProvider.html\" title=\"trait sp_state_machine::trie_backend::TrieCacheProvider\">TrieCacheProvider</a>&lt;H&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    &lt;H as <a class=\"trait\" href=\"hash_db/trait.Hasher.html\" title=\"trait hash_db::Hasher\">Hasher</a>&gt;::<a class=\"associatedtype\" href=\"hash_db/trait.Hasher.html#associatedtype.Out\" title=\"type hash_db::Hasher::Out\">Out</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> + <a class=\"trait\" href=\"parity_scale_codec/codec/trait.Codec.html\" title=\"trait parity_scale_codec::codec::Codec\">Codec</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_state_machine/backend/trait.Backend.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.78.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a></h4></section></summary><div class='docblock'>An error type when fetching data is not possible.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.TrieBackendStorage\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.TrieBackendStorage\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_state_machine/backend/trait.Backend.html#associatedtype.TrieBackendStorage\" class=\"associatedtype\">TrieBackendStorage</a> = S</h4></section></summary><div class='docblock'>Type of trie backend storage.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.RawIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.RawIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_state_machine/backend/trait.Backend.html#associatedtype.RawIter\" class=\"associatedtype\">RawIter</a> = RawIter&lt;S, H, C&gt;</h4></section></summary><div class='docblock'>Type of the raw storage iterator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.storage_hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_state_machine/trie_backend.rs.html#387\">source</a><a href=\"#method.storage_hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_state_machine/backend/trait.Backend.html#tymethod.storage_hash\" class=\"fn\">storage_hash</a>(\n    &amp;self,\n    key: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.u8.html\">u8</a>]\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.78.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.78.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;H as <a class=\"trait\" href=\"hash_db/trait.Hasher.html\" title=\"trait hash_db::Hasher\">Hasher</a>&gt;::<a class=\"associatedtype\" href=\"hash_db/trait.Hasher.html#associatedtype.Out\" title=\"type hash_db::Hasher::Out\">Out</a>&gt;, &lt;<a class=\"struct\" href=\"sp_state_machine/trie_backend/struct.TrieBackend.html\" title=\"struct sp_state_machine::trie_backend::TrieBackend\">TrieBackend</a>&lt;S, H, C&gt; as <a class=\"trait\" href=\"sp_state_machine/backend/trait.Backend.html\" title=\"trait sp_state_machine::backend::Backend\">Backend</a>&lt;H&gt;&gt;::<a class=\"associatedtype\" href=\"sp_state_machine/backend/trait.Backend.html#associatedtype.Error\" title=\"type sp_state_machine::backend::Backend::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Get keyed storage value hash or None if there is nothing associated.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.storage\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_state_machine/trie_backend.rs.html#391\">source</a><a href=\"#method.storage\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_state_machine/backend/trait.Backend.html#tymethod.storage\" class=\"fn\">storage</a>(\n    &amp;self,\n    key: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.u8.html\">u8</a>]\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.78.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.78.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.78.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.u8.html\">u8</a>&gt;&gt;, &lt;<a class=\"struct\" href=\"sp_state_machine/trie_backend/struct.TrieBackend.html\" title=\"struct sp_state_machine::trie_backend::TrieBackend\">TrieBackend</a>&lt;S, H, C&gt; as <a class=\"trait\" href=\"sp_state_machine/backend/trait.Backend.html\" title=\"trait sp_state_machine::backend::Backend\">Backend</a>&lt;H&gt;&gt;::<a class=\"associatedtype\" href=\"sp_state_machine/backend/trait.Backend.html#associatedtype.Error\" title=\"type sp_state_machine::backend::Backend::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Get keyed storage or None if there is nothing associated.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.child_storage_hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_state_machine/trie_backend.rs.html#395-399\">source</a><a href=\"#method.child_storage_hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_state_machine/backend/trait.Backend.html#tymethod.child_storage_hash\" class=\"fn\">child_storage_hash</a>(\n    &amp;self,\n    child_info: &amp;<a class=\"enum\" href=\"sp_storage/enum.ChildInfo.html\" title=\"enum sp_storage::ChildInfo\">ChildInfo</a>,\n    key: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.u8.html\">u8</a>]\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.78.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.78.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;H as <a class=\"trait\" href=\"hash_db/trait.Hasher.html\" title=\"trait hash_db::Hasher\">Hasher</a>&gt;::<a class=\"associatedtype\" href=\"hash_db/trait.Hasher.html#associatedtype.Out\" title=\"type hash_db::Hasher::Out\">Out</a>&gt;, &lt;<a class=\"struct\" href=\"sp_state_machine/trie_backend/struct.TrieBackend.html\" title=\"struct sp_state_machine::trie_backend::TrieBackend\">TrieBackend</a>&lt;S, H, C&gt; as <a class=\"trait\" href=\"sp_state_machine/backend/trait.Backend.html\" title=\"trait sp_state_machine::backend::Backend\">Backend</a>&lt;H&gt;&gt;::<a class=\"associatedtype\" href=\"sp_state_machine/backend/trait.Backend.html#associatedtype.Error\" title=\"type sp_state_machine::backend::Backend::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Get child keyed storage value hash or None if there is nothing associated.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.child_storage\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_state_machine/trie_backend.rs.html#403-407\">source</a><a href=\"#method.child_storage\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_state_machine/backend/trait.Backend.html#tymethod.child_storage\" class=\"fn\">child_storage</a>(\n    &amp;self,\n    child_info: &amp;<a class=\"enum\" href=\"sp_storage/enum.ChildInfo.html\" title=\"enum sp_storage::ChildInfo\">ChildInfo</a>,\n    key: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.u8.html\">u8</a>]\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.78.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.78.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.78.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.u8.html\">u8</a>&gt;&gt;, &lt;<a class=\"struct\" href=\"sp_state_machine/trie_backend/struct.TrieBackend.html\" title=\"struct sp_state_machine::trie_backend::TrieBackend\">TrieBackend</a>&lt;S, H, C&gt; as <a class=\"trait\" href=\"sp_state_machine/backend/trait.Backend.html\" title=\"trait sp_state_machine::backend::Backend\">Backend</a>&lt;H&gt;&gt;::<a class=\"associatedtype\" href=\"sp_state_machine/backend/trait.Backend.html#associatedtype.Error\" title=\"type sp_state_machine::backend::Backend::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Get child keyed child storage or None if there is nothing associated.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.closest_merkle_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_state_machine/trie_backend.rs.html#411\">source</a><a href=\"#method.closest_merkle_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_state_machine/backend/trait.Backend.html#tymethod.closest_merkle_value\" class=\"fn\">closest_merkle_value</a>(\n    &amp;self,\n    key: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.u8.html\">u8</a>]\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.78.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.78.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"trie_db/enum.MerkleValue.html\" title=\"enum trie_db::MerkleValue\">MerkleValue</a>&lt;&lt;H as <a class=\"trait\" href=\"hash_db/trait.Hasher.html\" title=\"trait hash_db::Hasher\">Hasher</a>&gt;::<a class=\"associatedtype\" href=\"hash_db/trait.Hasher.html#associatedtype.Out\" title=\"type hash_db::Hasher::Out\">Out</a>&gt;&gt;, &lt;<a class=\"struct\" href=\"sp_state_machine/trie_backend/struct.TrieBackend.html\" title=\"struct sp_state_machine::trie_backend::TrieBackend\">TrieBackend</a>&lt;S, H, C&gt; as <a class=\"trait\" href=\"sp_state_machine/backend/trait.Backend.html\" title=\"trait sp_state_machine::backend::Backend\">Backend</a>&lt;H&gt;&gt;::<a class=\"associatedtype\" href=\"sp_state_machine/backend/trait.Backend.html#associatedtype.Error\" title=\"type sp_state_machine::backend::Backend::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Get the merkle value or None if there is nothing associated.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.child_closest_merkle_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_state_machine/trie_backend.rs.html#415-419\">source</a><a href=\"#method.child_closest_merkle_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_state_machine/backend/trait.Backend.html#tymethod.child_closest_merkle_value\" class=\"fn\">child_closest_merkle_value</a>(\n    &amp;self,\n    child_info: &amp;<a class=\"enum\" href=\"sp_storage/enum.ChildInfo.html\" title=\"enum sp_storage::ChildInfo\">ChildInfo</a>,\n    key: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.u8.html\">u8</a>]\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.78.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.78.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"trie_db/enum.MerkleValue.html\" title=\"enum trie_db::MerkleValue\">MerkleValue</a>&lt;&lt;H as <a class=\"trait\" href=\"hash_db/trait.Hasher.html\" title=\"trait hash_db::Hasher\">Hasher</a>&gt;::<a class=\"associatedtype\" href=\"hash_db/trait.Hasher.html#associatedtype.Out\" title=\"type hash_db::Hasher::Out\">Out</a>&gt;&gt;, &lt;<a class=\"struct\" href=\"sp_state_machine/trie_backend/struct.TrieBackend.html\" title=\"struct sp_state_machine::trie_backend::TrieBackend\">TrieBackend</a>&lt;S, H, C&gt; as <a class=\"trait\" href=\"sp_state_machine/backend/trait.Backend.html\" title=\"trait sp_state_machine::backend::Backend\">Backend</a>&lt;H&gt;&gt;::<a class=\"associatedtype\" href=\"sp_state_machine/backend/trait.Backend.html#associatedtype.Error\" title=\"type sp_state_machine::backend::Backend::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Get the child merkle value or None if there is nothing associated.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_storage_key\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_state_machine/trie_backend.rs.html#423\">source</a><a href=\"#method.next_storage_key\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_state_machine/backend/trait.Backend.html#tymethod.next_storage_key\" class=\"fn\">next_storage_key</a>(\n    &amp;self,\n    key: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.u8.html\">u8</a>]\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.78.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.78.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.78.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.u8.html\">u8</a>&gt;&gt;, &lt;<a class=\"struct\" href=\"sp_state_machine/trie_backend/struct.TrieBackend.html\" title=\"struct sp_state_machine::trie_backend::TrieBackend\">TrieBackend</a>&lt;S, H, C&gt; as <a class=\"trait\" href=\"sp_state_machine/backend/trait.Backend.html\" title=\"trait sp_state_machine::backend::Backend\">Backend</a>&lt;H&gt;&gt;::<a class=\"associatedtype\" href=\"sp_state_machine/backend/trait.Backend.html#associatedtype.Error\" title=\"type sp_state_machine::backend::Backend::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Return the next key in storage in lexicographic order or <code>None</code> if there is no value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_child_storage_key\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_state_machine/trie_backend.rs.html#460-464\">source</a><a href=\"#method.next_child_storage_key\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_state_machine/backend/trait.Backend.html#tymethod.next_child_storage_key\" class=\"fn\">next_child_storage_key</a>(\n    &amp;self,\n    child_info: &amp;<a class=\"enum\" href=\"sp_storage/enum.ChildInfo.html\" title=\"enum sp_storage::ChildInfo\">ChildInfo</a>,\n    key: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.u8.html\">u8</a>]\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.78.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.78.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.78.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.u8.html\">u8</a>&gt;&gt;, &lt;<a class=\"struct\" href=\"sp_state_machine/trie_backend/struct.TrieBackend.html\" title=\"struct sp_state_machine::trie_backend::TrieBackend\">TrieBackend</a>&lt;S, H, C&gt; as <a class=\"trait\" href=\"sp_state_machine/backend/trait.Backend.html\" title=\"trait sp_state_machine::backend::Backend\">Backend</a>&lt;H&gt;&gt;::<a class=\"associatedtype\" href=\"sp_state_machine/backend/trait.Backend.html#associatedtype.Error\" title=\"type sp_state_machine::backend::Backend::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Return the next key in child storage in lexicographic order or <code>None</code> if there is no value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.raw_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_state_machine/trie_backend.rs.html#468\">source</a><a href=\"#method.raw_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_state_machine/backend/trait.Backend.html#tymethod.raw_iter\" class=\"fn\">raw_iter</a>(\n    &amp;self,\n    args: <a class=\"struct\" href=\"sp_state_machine/backend/struct.IterArgs.html\" title=\"struct sp_state_machine::backend::IterArgs\">IterArgs</a>&lt;'_&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.78.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;<a class=\"struct\" href=\"sp_state_machine/trie_backend/struct.TrieBackend.html\" title=\"struct sp_state_machine::trie_backend::TrieBackend\">TrieBackend</a>&lt;S, H, C&gt; as <a class=\"trait\" href=\"sp_state_machine/backend/trait.Backend.html\" title=\"trait sp_state_machine::backend::Backend\">Backend</a>&lt;H&gt;&gt;::<a class=\"associatedtype\" href=\"sp_state_machine/backend/trait.Backend.html#associatedtype.RawIter\" title=\"type sp_state_machine::backend::Backend::RawIter\">RawIter</a>, &lt;<a class=\"struct\" href=\"sp_state_machine/trie_backend/struct.TrieBackend.html\" title=\"struct sp_state_machine::trie_backend::TrieBackend\">TrieBackend</a>&lt;S, H, C&gt; as <a class=\"trait\" href=\"sp_state_machine/backend/trait.Backend.html\" title=\"trait sp_state_machine::backend::Backend\">Backend</a>&lt;H&gt;&gt;::<a class=\"associatedtype\" href=\"sp_state_machine/backend/trait.Backend.html#associatedtype.Error\" title=\"type sp_state_machine::backend::Backend::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Returns a lifetimeless raw storage iterator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.storage_root\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_state_machine/trie_backend.rs.html#472-478\">source</a><a href=\"#method.storage_root\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_state_machine/backend/trait.Backend.html#tymethod.storage_root\" class=\"fn\">storage_root</a>&lt;'a&gt;(\n    &amp;self,\n    delta: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = (&amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.u8.html\">u8</a>], <a class=\"enum\" href=\"https://doc.rust-lang.org/1.78.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.u8.html\">u8</a>]&gt;)&gt;,\n    state_version: <a class=\"enum\" href=\"sp_storage/enum.StateVersion.html\" title=\"enum sp_storage::StateVersion\">StateVersion</a>\n) -&gt; (&lt;H as <a class=\"trait\" href=\"hash_db/trait.Hasher.html\" title=\"trait hash_db::Hasher\">Hasher</a>&gt;::<a class=\"associatedtype\" href=\"hash_db/trait.Hasher.html#associatedtype.Out\" title=\"type hash_db::Hasher::Out\">Out</a>, <a class=\"struct\" href=\"memory_db/struct.MemoryDB.html\" title=\"struct memory_db::MemoryDB\">MemoryDB</a>&lt;H, <a class=\"struct\" href=\"memory_db/struct.PrefixedKey.html\" title=\"struct memory_db::PrefixedKey\">PrefixedKey</a>&lt;H&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.78.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.u8.html\">u8</a>&gt;&gt;)<div class=\"where\">where\n    &lt;H as <a class=\"trait\" href=\"hash_db/trait.Hasher.html\" title=\"trait hash_db::Hasher\">Hasher</a>&gt;::<a class=\"associatedtype\" href=\"hash_db/trait.Hasher.html#associatedtype.Out\" title=\"type hash_db::Hasher::Out\">Out</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,</div></h4></section></summary><div class='docblock'>Calculate the storage root, with given delta over what is already stored in\nthe backend, and produce a “transaction” that can be used to commit.\nDoes not include child storage updates.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.child_storage_root\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_state_machine/trie_backend.rs.html#483-490\">source</a><a href=\"#method.child_storage_root\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_state_machine/backend/trait.Backend.html#tymethod.child_storage_root\" class=\"fn\">child_storage_root</a>&lt;'a&gt;(\n    &amp;self,\n    child_info: &amp;<a class=\"enum\" href=\"sp_storage/enum.ChildInfo.html\" title=\"enum sp_storage::ChildInfo\">ChildInfo</a>,\n    delta: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = (&amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.u8.html\">u8</a>], <a class=\"enum\" href=\"https://doc.rust-lang.org/1.78.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.u8.html\">u8</a>]&gt;)&gt;,\n    state_version: <a class=\"enum\" href=\"sp_storage/enum.StateVersion.html\" title=\"enum sp_storage::StateVersion\">StateVersion</a>\n) -&gt; (&lt;H as <a class=\"trait\" href=\"hash_db/trait.Hasher.html\" title=\"trait hash_db::Hasher\">Hasher</a>&gt;::<a class=\"associatedtype\" href=\"hash_db/trait.Hasher.html#associatedtype.Out\" title=\"type hash_db::Hasher::Out\">Out</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.bool.html\">bool</a>, <a class=\"struct\" href=\"memory_db/struct.MemoryDB.html\" title=\"struct memory_db::MemoryDB\">MemoryDB</a>&lt;H, <a class=\"struct\" href=\"memory_db/struct.PrefixedKey.html\" title=\"struct memory_db::PrefixedKey\">PrefixedKey</a>&lt;H&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.78.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.u8.html\">u8</a>&gt;&gt;)<div class=\"where\">where\n    &lt;H as <a class=\"trait\" href=\"hash_db/trait.Hasher.html\" title=\"trait hash_db::Hasher\">Hasher</a>&gt;::<a class=\"associatedtype\" href=\"hash_db/trait.Hasher.html#associatedtype.Out\" title=\"type hash_db::Hasher::Out\">Out</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,</div></h4></section></summary><div class='docblock'>Calculate the child storage root, with given delta over what is already stored in\nthe backend, and produce a “transaction” that can be used to commit. The second argument\nis true if child storage root equals default storage root.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.register_overlay_stats\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_state_machine/trie_backend.rs.html#495\">source</a><a href=\"#method.register_overlay_stats\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_state_machine/backend/trait.Backend.html#tymethod.register_overlay_stats\" class=\"fn\">register_overlay_stats</a>(&amp;self, _stats: &amp;<a class=\"struct\" href=\"sp_state_machine/stats/struct.StateMachineStats.html\" title=\"struct sp_state_machine::stats::StateMachineStats\">StateMachineStats</a>)</h4></section></summary><div class='docblock'>Register stats from overlay of state machine. <a href=\"sp_state_machine/backend/trait.Backend.html#tymethod.register_overlay_stats\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.usage_info\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_state_machine/trie_backend.rs.html#497\">source</a><a href=\"#method.usage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_state_machine/backend/trait.Backend.html#tymethod.usage_info\" class=\"fn\">usage_info</a>(&amp;self) -&gt; <a class=\"struct\" href=\"sp_state_machine/stats/struct.UsageInfo.html\" title=\"struct sp_state_machine::stats::UsageInfo\">UsageInfo</a></h4></section></summary><div class='docblock'>Query backend usage statistics (i/o, memory) <a href=\"sp_state_machine/backend/trait.Backend.html#tymethod.usage_info\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wipe\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_state_machine/trie_backend.rs.html#501\">source</a><a href=\"#method.wipe\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_state_machine/backend/trait.Backend.html#method.wipe\" class=\"fn\">wipe</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.78.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.unit.html\">()</a>, &lt;<a class=\"struct\" href=\"sp_state_machine/trie_backend/struct.TrieBackend.html\" title=\"struct sp_state_machine::trie_backend::TrieBackend\">TrieBackend</a>&lt;S, H, C&gt; as <a class=\"trait\" href=\"sp_state_machine/backend/trait.Backend.html\" title=\"trait sp_state_machine::backend::Backend\">Backend</a>&lt;H&gt;&gt;::<a class=\"associatedtype\" href=\"sp_state_machine/backend/trait.Backend.html#associatedtype.Error\" title=\"type sp_state_machine::backend::Backend::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Wipe the state database.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists_storage\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_state_machine/backend.rs.html#223\">source</a><a href=\"#method.exists_storage\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_state_machine/backend/trait.Backend.html#method.exists_storage\" class=\"fn\">exists_storage</a>(&amp;self, key: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.78.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.bool.html\">bool</a>, Self::<a class=\"associatedtype\" href=\"sp_state_machine/backend/trait.Backend.html#associatedtype.Error\" title=\"type sp_state_machine::backend::Backend::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>true if a key exists in storage.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exists_child_storage\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_state_machine/backend.rs.html#228-232\">source</a><a href=\"#method.exists_child_storage\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_state_machine/backend/trait.Backend.html#method.exists_child_storage\" class=\"fn\">exists_child_storage</a>(\n    &amp;self,\n    child_info: &amp;<a class=\"enum\" href=\"sp_storage/enum.ChildInfo.html\" title=\"enum sp_storage::ChildInfo\">ChildInfo</a>,\n    key: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.u8.html\">u8</a>]\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.78.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.bool.html\">bool</a>, Self::<a class=\"associatedtype\" href=\"sp_state_machine/backend/trait.Backend.html#associatedtype.Error\" title=\"type sp_state_machine::backend::Backend::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>true if a key exists in child storage.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pairs\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_state_machine/backend.rs.html#273\">source</a><a href=\"#method.pairs\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_state_machine/backend/trait.Backend.html#method.pairs\" class=\"fn\">pairs</a>&lt;'a&gt;(\n    &amp;'a self,\n    args: <a class=\"struct\" href=\"sp_state_machine/backend/struct.IterArgs.html\" title=\"struct sp_state_machine::backend::IterArgs\">IterArgs</a>&lt;'_&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.78.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_state_machine/backend/struct.PairsIter.html\" title=\"struct sp_state_machine::backend::PairsIter\">PairsIter</a>&lt;'a, H, Self::<a class=\"associatedtype\" href=\"sp_state_machine/backend/trait.Backend.html#associatedtype.RawIter\" title=\"type sp_state_machine::backend::Backend::RawIter\">RawIter</a>&gt;, Self::<a class=\"associatedtype\" href=\"sp_state_machine/backend/trait.Backend.html#associatedtype.Error\" title=\"type sp_state_machine::backend::Backend::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Get an iterator over key/value pairs.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.keys\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_state_machine/backend.rs.html#282\">source</a><a href=\"#method.keys\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_state_machine/backend/trait.Backend.html#method.keys\" class=\"fn\">keys</a>&lt;'a&gt;(\n    &amp;'a self,\n    args: <a class=\"struct\" href=\"sp_state_machine/backend/struct.IterArgs.html\" title=\"struct sp_state_machine::backend::IterArgs\">IterArgs</a>&lt;'_&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.78.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_state_machine/backend/struct.KeysIter.html\" title=\"struct sp_state_machine::backend::KeysIter\">KeysIter</a>&lt;'a, H, Self::<a class=\"associatedtype\" href=\"sp_state_machine/backend/trait.Backend.html#associatedtype.RawIter\" title=\"type sp_state_machine::backend::Backend::RawIter\">RawIter</a>&gt;, Self::<a class=\"associatedtype\" href=\"sp_state_machine/backend/trait.Backend.html#associatedtype.Error\" title=\"type sp_state_machine::backend::Backend::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Get an iterator over keys.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.full_storage_root\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_state_machine/backend.rs.html#293-302\">source</a><a href=\"#method.full_storage_root\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_state_machine/backend/trait.Backend.html#method.full_storage_root\" class=\"fn\">full_storage_root</a>&lt;'a&gt;(\n    &amp;self,\n    delta: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = (&amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.u8.html\">u8</a>], <a class=\"enum\" href=\"https://doc.rust-lang.org/1.78.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.u8.html\">u8</a>]&gt;)&gt;,\n    child_deltas: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = (&amp;'a <a class=\"enum\" href=\"sp_storage/enum.ChildInfo.html\" title=\"enum sp_storage::ChildInfo\">ChildInfo</a>, impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = (&amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.u8.html\">u8</a>], <a class=\"enum\" href=\"https://doc.rust-lang.org/1.78.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.u8.html\">u8</a>]&gt;)&gt;)&gt;,\n    state_version: <a class=\"enum\" href=\"sp_storage/enum.StateVersion.html\" title=\"enum sp_storage::StateVersion\">StateVersion</a>\n) -&gt; (&lt;H as <a class=\"trait\" href=\"hash_db/trait.Hasher.html\" title=\"trait hash_db::Hasher\">Hasher</a>&gt;::<a class=\"associatedtype\" href=\"hash_db/trait.Hasher.html#associatedtype.Out\" title=\"type hash_db::Hasher::Out\">Out</a>, <a class=\"struct\" href=\"memory_db/struct.MemoryDB.html\" title=\"struct memory_db::MemoryDB\">MemoryDB</a>&lt;H, <a class=\"struct\" href=\"memory_db/struct.PrefixedKey.html\" title=\"struct memory_db::PrefixedKey\">PrefixedKey</a>&lt;H&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.78.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.u8.html\">u8</a>&gt;&gt;)<div class=\"where\">where\n    &lt;H as <a class=\"trait\" href=\"hash_db/trait.Hasher.html\" title=\"trait hash_db::Hasher\">Hasher</a>&gt;::<a class=\"associatedtype\" href=\"hash_db/trait.Hasher.html#associatedtype.Out\" title=\"type hash_db::Hasher::Out\">Out</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> + <a class=\"trait\" href=\"parity_scale_codec/codec/trait.Encode.html\" title=\"trait parity_scale_codec::codec::Encode\">Encode</a>,</div></h4></section></summary><div class='docblock'>Calculate the storage root, with given delta over what is already stored\nin the backend, and produce a “transaction” that can be used to commit.\nDoes include child storage updates.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.commit\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_state_machine/backend.rs.html#346-352\">source</a><a href=\"#method.commit\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_state_machine/backend/trait.Backend.html#method.commit\" class=\"fn\">commit</a>(\n    &amp;self,\n    _: &lt;H as <a class=\"trait\" href=\"hash_db/trait.Hasher.html\" title=\"trait hash_db::Hasher\">Hasher</a>&gt;::<a class=\"associatedtype\" href=\"hash_db/trait.Hasher.html#associatedtype.Out\" title=\"type hash_db::Hasher::Out\">Out</a>,\n    _: <a class=\"struct\" href=\"memory_db/struct.MemoryDB.html\" title=\"struct memory_db::MemoryDB\">MemoryDB</a>&lt;H, <a class=\"struct\" href=\"memory_db/struct.PrefixedKey.html\" title=\"struct memory_db::PrefixedKey\">PrefixedKey</a>&lt;H&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.78.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.u8.html\">u8</a>&gt;&gt;,\n    _: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.78.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;(<a class=\"struct\" href=\"https://doc.rust-lang.org/1.78.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.u8.html\">u8</a>&gt;, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.78.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.78.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.u8.html\">u8</a>&gt;&gt;)&gt;,\n    _: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.78.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;(<a class=\"struct\" href=\"https://doc.rust-lang.org/1.78.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.u8.html\">u8</a>&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.78.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;(<a class=\"struct\" href=\"https://doc.rust-lang.org/1.78.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.u8.html\">u8</a>&gt;, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.78.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.78.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.u8.html\">u8</a>&gt;&gt;)&gt;)&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.78.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.unit.html\">()</a>, Self::<a class=\"associatedtype\" href=\"sp_state_machine/backend/trait.Backend.html#associatedtype.Error\" title=\"type sp_state_machine::backend::Backend::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Commit given transaction to storage.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_write_count\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_state_machine/backend.rs.html#357\">source</a><a href=\"#method.read_write_count\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_state_machine/backend/trait.Backend.html#method.read_write_count\" class=\"fn\">read_write_count</a>(&amp;self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.u32.html\">u32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.u32.html\">u32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.u32.html\">u32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>Get the read/write count of the db</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reset_read_write_count\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_state_machine/backend.rs.html#362\">source</a><a href=\"#method.reset_read_write_count\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_state_machine/backend/trait.Backend.html#method.reset_read_write_count\" class=\"fn\">reset_read_write_count</a>(&amp;self)</h4></section></summary><div class='docblock'>Get the read/write count of the db</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_whitelist\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_state_machine/backend.rs.html#367\">source</a><a href=\"#method.get_whitelist\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_state_machine/backend/trait.Backend.html#method.get_whitelist\" class=\"fn\">get_whitelist</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.78.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"sp_storage/struct.TrackedStorageKey.html\" title=\"struct sp_storage::TrackedStorageKey\">TrackedStorageKey</a>&gt;</h4></section></summary><div class='docblock'>Get the whitelist for tracking db reads/writes</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_whitelist\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_state_machine/backend.rs.html#372\">source</a><a href=\"#method.set_whitelist\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_state_machine/backend/trait.Backend.html#method.set_whitelist\" class=\"fn\">set_whitelist</a>(&amp;self, _: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.78.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"sp_storage/struct.TrackedStorageKey.html\" title=\"struct sp_storage::TrackedStorageKey\">TrackedStorageKey</a>&gt;)</h4></section></summary><div class='docblock'>Update the whitelist for tracking db reads/writes</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.proof_size\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_state_machine/backend.rs.html#375\">source</a><a href=\"#method.proof_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_state_machine/backend/trait.Backend.html#method.proof_size\" class=\"fn\">proof_size</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.78.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Estimate proof size</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_read_and_written_keys\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_state_machine/backend.rs.html#380\">source</a><a href=\"#method.get_read_and_written_keys\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_state_machine/backend/trait.Backend.html#method.get_read_and_written_keys\" class=\"fn\">get_read_and_written_keys</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.78.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;(<a class=\"struct\" href=\"https://doc.rust-lang.org/1.78.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.u8.html\">u8</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.u32.html\">u32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.u32.html\">u32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.bool.html\">bool</a>)&gt;</h4></section></summary><div class='docblock'>Extend storage info for benchmarking db</div></details></div></details>","Backend<H>","sc_client_db::DbState"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-TrieBackend%3CS,+H,+C%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_state_machine/trie_backend.rs.html#370-371\">source</a><a href=\"#impl-Debug-for-TrieBackend%3CS,+H,+C%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, H, C&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"sp_state_machine/trie_backend/struct.TrieBackend.html\" title=\"struct sp_state_machine::trie_backend::TrieBackend\">TrieBackend</a>&lt;S, H, C&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"sp_state_machine/trie_backend_essence/trait.TrieBackendStorage.html\" title=\"trait sp_state_machine::trie_backend_essence::TrieBackendStorage\">TrieBackendStorage</a>&lt;H&gt;,\n    H: <a class=\"trait\" href=\"hash_db/trait.Hasher.html\" title=\"trait hash_db::Hasher\">Hasher</a>,\n    C: <a class=\"trait\" href=\"sp_state_machine/trie_backend/trait.TrieCacheProvider.html\" title=\"trait sp_state_machine::trie_backend::TrieCacheProvider\">TrieCacheProvider</a>&lt;H&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_state_machine/trie_backend.rs.html#373\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.78.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.78.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.78.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.78.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","sc_client_db::DbState"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TrieBackend%3CS,+H,+C%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_state_machine/trie_backend.rs.html#321-324\">source</a><a href=\"#impl-TrieBackend%3CS,+H,+C%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, H, C&gt; <a class=\"struct\" href=\"sp_state_machine/trie_backend/struct.TrieBackend.html\" title=\"struct sp_state_machine::trie_backend::TrieBackend\">TrieBackend</a>&lt;S, H, C&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"sp_state_machine/trie_backend_essence/trait.TrieBackendStorage.html\" title=\"trait sp_state_machine::trie_backend_essence::TrieBackendStorage\">TrieBackendStorage</a>&lt;H&gt;,\n    H: <a class=\"trait\" href=\"hash_db/trait.Hasher.html\" title=\"trait hash_db::Hasher\">Hasher</a>,\n    C: <a class=\"trait\" href=\"sp_state_machine/trie_backend/trait.TrieCacheProvider.html\" title=\"trait sp_state_machine::trie_backend::TrieCacheProvider\">TrieCacheProvider</a>&lt;H&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    &lt;H as <a class=\"trait\" href=\"hash_db/trait.Hasher.html\" title=\"trait hash_db::Hasher\">Hasher</a>&gt;::<a class=\"associatedtype\" href=\"hash_db/trait.Hasher.html#associatedtype.Out\" title=\"type hash_db::Hasher::Out\">Out</a>: <a class=\"trait\" href=\"parity_scale_codec/codec/trait.Codec.html\" title=\"trait parity_scale_codec::codec::Codec\">Codec</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.essence\" class=\"method\"><a class=\"src rightside\" href=\"src/sp_state_machine/trie_backend.rs.html#332\">source</a><h4 class=\"code-header\">pub fn <a href=\"sp_state_machine/trie_backend/struct.TrieBackend.html#tymethod.essence\" class=\"fn\">essence</a>(&amp;self) -&gt; &amp;TrieBackendEssence&lt;S, H, C&gt;</h4></section></summary><div class=\"docblock\"><p>Get backend essence reference.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.backend_storage_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/sp_state_machine/trie_backend.rs.html#337\">source</a><h4 class=\"code-header\">pub fn <a href=\"sp_state_machine/trie_backend/struct.TrieBackend.html#tymethod.backend_storage_mut\" class=\"fn\">backend_storage_mut</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.reference.html\">&amp;mut S</a></h4></section></summary><div class=\"docblock\"><p>Get backend storage reference.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.backend_storage\" class=\"method\"><a class=\"src rightside\" href=\"src/sp_state_machine/trie_backend.rs.html#342\">source</a><h4 class=\"code-header\">pub fn <a href=\"sp_state_machine/trie_backend/struct.TrieBackend.html#tymethod.backend_storage\" class=\"fn\">backend_storage</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.reference.html\">&amp;S</a></h4></section></summary><div class=\"docblock\"><p>Get backend storage reference.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_root\" class=\"method\"><a class=\"src rightside\" href=\"src/sp_state_machine/trie_backend.rs.html#347\">source</a><h4 class=\"code-header\">pub fn <a href=\"sp_state_machine/trie_backend/struct.TrieBackend.html#tymethod.set_root\" class=\"fn\">set_root</a>(&amp;mut self, root: &lt;H as <a class=\"trait\" href=\"hash_db/trait.Hasher.html\" title=\"trait hash_db::Hasher\">Hasher</a>&gt;::<a class=\"associatedtype\" href=\"hash_db/trait.Hasher.html#associatedtype.Out\" title=\"type hash_db::Hasher::Out\">Out</a>)</h4></section></summary><div class=\"docblock\"><p>Set trie root.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.root\" class=\"method\"><a class=\"src rightside\" href=\"src/sp_state_machine/trie_backend.rs.html#352\">source</a><h4 class=\"code-header\">pub fn <a href=\"sp_state_machine/trie_backend/struct.TrieBackend.html#tymethod.root\" class=\"fn\">root</a>(&amp;self) -&gt; &amp;&lt;H as <a class=\"trait\" href=\"hash_db/trait.Hasher.html\" title=\"trait hash_db::Hasher\">Hasher</a>&gt;::<a class=\"associatedtype\" href=\"hash_db/trait.Hasher.html#associatedtype.Out\" title=\"type hash_db::Hasher::Out\">Out</a></h4></section></summary><div class=\"docblock\"><p>Get trie root.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_storage\" class=\"method\"><a class=\"src rightside\" href=\"src/sp_state_machine/trie_backend.rs.html#357\">source</a><h4 class=\"code-header\">pub fn <a href=\"sp_state_machine/trie_backend/struct.TrieBackend.html#tymethod.into_storage\" class=\"fn\">into_storage</a>(self) -&gt; S</h4></section></summary><div class=\"docblock\"><p>Consumes self and returns underlying storage.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extract_proof\" class=\"method\"><a class=\"src rightside\" href=\"src/sp_state_machine/trie_backend.rs.html#365\">source</a><h4 class=\"code-header\">pub fn <a href=\"sp_state_machine/trie_backend/struct.TrieBackend.html#tymethod.extract_proof\" class=\"fn\">extract_proof</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.78.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"sp_trie/storage_proof/struct.StorageProof.html\" title=\"struct sp_trie::storage_proof::StorageProof\">StorageProof</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Extract the <a href=\"sp_trie/storage_proof/struct.StorageProof.html\" title=\"struct sp_trie::storage_proof::StorageProof\"><code>StorageProof</code></a>.</p>\n<p>This only returns <code>Some</code> when there was a recorder set.</p>\n</div></details></div></details>",0,"sc_client_db::DbState"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()