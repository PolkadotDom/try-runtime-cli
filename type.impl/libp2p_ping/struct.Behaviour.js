(function() {var type_impls = {
"libp2p_ping":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Behaviour\" class=\"impl\"><a class=\"src rightside\" href=\"src/libp2p_ping/lib.rs.html#103-111\">source</a><a href=\"#impl-Behaviour\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"libp2p_ping/struct.Behaviour.html\" title=\"struct libp2p_ping::Behaviour\">Behaviour</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/libp2p_ping/lib.rs.html#105-110\">source</a><h4 class=\"code-header\">pub fn <a href=\"libp2p_ping/struct.Behaviour.html#tymethod.new\" class=\"fn\">new</a>(config: <a class=\"struct\" href=\"libp2p_ping/struct.Config.html\" title=\"struct libp2p_ping::Config\">Config</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Creates a new <code>Ping</code> network behaviour with the given configuration.</p>\n</div></details></div></details>",0,"libp2p_ping::Ping"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-Behaviour\" class=\"impl\"><a class=\"src rightside\" href=\"src/libp2p_ping/lib.rs.html#113-117\">source</a><a href=\"#impl-Default-for-Behaviour\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"libp2p_ping/struct.Behaviour.html\" title=\"struct libp2p_ping::Behaviour\">Behaviour</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/libp2p_ping/lib.rs.html#114-116\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; Self</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","libp2p_ping::Ping"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NetworkBehaviour-for-Behaviour\" class=\"impl\"><a class=\"src rightside\" href=\"src/libp2p_ping/lib.rs.html#119-191\">source</a><a href=\"#impl-NetworkBehaviour-for-Behaviour\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"libp2p_swarm/behaviour/trait.NetworkBehaviour.html\" title=\"trait libp2p_swarm::behaviour::NetworkBehaviour\">NetworkBehaviour</a> for <a class=\"struct\" href=\"libp2p_ping/struct.Behaviour.html\" title=\"struct libp2p_ping::Behaviour\">Behaviour</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.ConnectionHandler\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.ConnectionHandler\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"libp2p_swarm/behaviour/trait.NetworkBehaviour.html#associatedtype.ConnectionHandler\" class=\"associatedtype\">ConnectionHandler</a> = Handler</h4></section></summary><div class='docblock'>Handler for all the protocols the network behaviour supports.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.OutEvent\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.OutEvent\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"libp2p_swarm/behaviour/trait.NetworkBehaviour.html#associatedtype.OutEvent\" class=\"associatedtype\">OutEvent</a> = <a class=\"struct\" href=\"libp2p_ping/struct.Event.html\" title=\"struct libp2p_ping::Event\">Event</a></h4></section></summary><div class='docblock'>Event generated by the <code>NetworkBehaviour</code> and that the swarm will report back.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.handle_established_inbound_connection\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/libp2p_ping/lib.rs.html#123-131\">source</a><a href=\"#method.handle_established_inbound_connection\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"libp2p_swarm/behaviour/trait.NetworkBehaviour.html#method.handle_established_inbound_connection\" class=\"fn\">handle_established_inbound_connection</a>(\n    &amp;mut self,\n    _: <a class=\"struct\" href=\"libp2p_swarm/connection/struct.ConnectionId.html\" title=\"struct libp2p_swarm::connection::ConnectionId\">ConnectionId</a>,\n    _: <a class=\"type\" href=\"libp2p_core/type.PeerId.html\" title=\"type libp2p_core::PeerId\">PeerId</a>,\n    _: &amp;<a class=\"struct\" href=\"multiaddr/struct.Multiaddr.html\" title=\"struct multiaddr::Multiaddr\">Multiaddr</a>,\n    _: &amp;<a class=\"struct\" href=\"multiaddr/struct.Multiaddr.html\" title=\"struct multiaddr::Multiaddr\">Multiaddr</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.78.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"type\" href=\"libp2p_swarm/type.THandler.html\" title=\"type libp2p_swarm::THandler\">THandler</a>&lt;Self&gt;, <a class=\"struct\" href=\"libp2p_swarm/struct.ConnectionDenied.html\" title=\"struct libp2p_swarm::ConnectionDenied\">ConnectionDenied</a>&gt;</h4></section></summary><div class='docblock'>Callback that is invoked for every established inbound connection. <a href=\"libp2p_swarm/behaviour/trait.NetworkBehaviour.html#method.handle_established_inbound_connection\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.handle_established_outbound_connection\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/libp2p_ping/lib.rs.html#133-141\">source</a><a href=\"#method.handle_established_outbound_connection\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"libp2p_swarm/behaviour/trait.NetworkBehaviour.html#method.handle_established_outbound_connection\" class=\"fn\">handle_established_outbound_connection</a>(\n    &amp;mut self,\n    _: <a class=\"struct\" href=\"libp2p_swarm/connection/struct.ConnectionId.html\" title=\"struct libp2p_swarm::connection::ConnectionId\">ConnectionId</a>,\n    _: <a class=\"type\" href=\"libp2p_core/type.PeerId.html\" title=\"type libp2p_core::PeerId\">PeerId</a>,\n    _: &amp;<a class=\"struct\" href=\"multiaddr/struct.Multiaddr.html\" title=\"struct multiaddr::Multiaddr\">Multiaddr</a>,\n    _: <a class=\"enum\" href=\"libp2p_core/connection/enum.Endpoint.html\" title=\"enum libp2p_core::connection::Endpoint\">Endpoint</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.78.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"type\" href=\"libp2p_swarm/type.THandler.html\" title=\"type libp2p_swarm::THandler\">THandler</a>&lt;Self&gt;, <a class=\"struct\" href=\"libp2p_swarm/struct.ConnectionDenied.html\" title=\"struct libp2p_swarm::ConnectionDenied\">ConnectionDenied</a>&gt;</h4></section></summary><div class='docblock'>Callback that is invoked for every established outbound connection. <a href=\"libp2p_swarm/behaviour/trait.NetworkBehaviour.html#method.handle_established_outbound_connection\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_connection_handler_event\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/libp2p_ping/lib.rs.html#143-150\">source</a><a href=\"#method.on_connection_handler_event\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"libp2p_swarm/behaviour/trait.NetworkBehaviour.html#tymethod.on_connection_handler_event\" class=\"fn\">on_connection_handler_event</a>(\n    &amp;mut self,\n    peer: <a class=\"type\" href=\"libp2p_core/type.PeerId.html\" title=\"type libp2p_core::PeerId\">PeerId</a>,\n    _: <a class=\"struct\" href=\"libp2p_swarm/connection/struct.ConnectionId.html\" title=\"struct libp2p_swarm::connection::ConnectionId\">ConnectionId</a>,\n    result: <a class=\"type\" href=\"libp2p_swarm/type.THandlerOutEvent.html\" title=\"type libp2p_swarm::THandlerOutEvent\">THandlerOutEvent</a>&lt;Self&gt;\n)</h4></section></summary><div class='docblock'>Informs the behaviour about an event generated by the <a href=\"libp2p_swarm/handler/trait.ConnectionHandler.html\" title=\"trait libp2p_swarm::handler::ConnectionHandler\"><code>ConnectionHandler</code></a>\ndedicated to the peer identified by <code>peer_id</code>. for the behaviour. <a href=\"libp2p_swarm/behaviour/trait.NetworkBehaviour.html#tymethod.on_connection_handler_event\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/libp2p_ping/lib.rs.html#152-170\">source</a><a href=\"#method.poll\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"libp2p_swarm/behaviour/trait.NetworkBehaviour.html#tymethod.poll\" class=\"fn\">poll</a>(\n    &amp;mut self,\n    _: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.78.0/core/task/wake/struct.Context.html\" title=\"struct core::task::wake::Context\">Context</a>&lt;'_&gt;,\n    _: &amp;mut impl <a class=\"trait\" href=\"libp2p_swarm/behaviour/trait.PollParameters.html\" title=\"trait libp2p_swarm::behaviour::PollParameters\">PollParameters</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.78.0/core/task/poll/enum.Poll.html\" title=\"enum core::task::poll::Poll\">Poll</a>&lt;<a class=\"type\" href=\"libp2p_swarm/behaviour/type.NetworkBehaviourAction.html\" title=\"type libp2p_swarm::behaviour::NetworkBehaviourAction\">NetworkBehaviourAction</a>&lt;Self::<a class=\"associatedtype\" href=\"libp2p_swarm/behaviour/trait.NetworkBehaviour.html#associatedtype.OutEvent\" title=\"type libp2p_swarm::behaviour::NetworkBehaviour::OutEvent\">OutEvent</a>, <a class=\"type\" href=\"libp2p_swarm/type.THandlerInEvent.html\" title=\"type libp2p_swarm::THandlerInEvent\">THandlerInEvent</a>&lt;Self&gt;&gt;&gt;</h4></section></summary><div class='docblock'>Polls for things that swarm should do. <a href=\"libp2p_swarm/behaviour/trait.NetworkBehaviour.html#tymethod.poll\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_swarm_event\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/libp2p_ping/lib.rs.html#172-190\">source</a><a href=\"#method.on_swarm_event\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"libp2p_swarm/behaviour/trait.NetworkBehaviour.html#tymethod.on_swarm_event\" class=\"fn\">on_swarm_event</a>(&amp;mut self, event: <a class=\"enum\" href=\"libp2p_swarm/behaviour/enum.FromSwarm.html\" title=\"enum libp2p_swarm::behaviour::FromSwarm\">FromSwarm</a>&lt;'_, Self::<a class=\"associatedtype\" href=\"libp2p_swarm/behaviour/trait.NetworkBehaviour.html#associatedtype.ConnectionHandler\" title=\"type libp2p_swarm::behaviour::NetworkBehaviour::ConnectionHandler\">ConnectionHandler</a>&gt;)</h4></section></summary><div class='docblock'>Informs the behaviour about an event from the <a href=\"libp2p_swarm/struct.Swarm.html\" title=\"struct libp2p_swarm::Swarm\"><code>Swarm</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_handler\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/libp2p_swarm/behaviour.rs.html#152\">source</a><a href=\"#method.new_handler\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"libp2p_swarm/behaviour/trait.NetworkBehaviour.html#method.new_handler\" class=\"fn\">new_handler</a>(&amp;mut self) -&gt; Self::<a class=\"associatedtype\" href=\"libp2p_swarm/behaviour/trait.NetworkBehaviour.html#associatedtype.ConnectionHandler\" title=\"type libp2p_swarm::behaviour::NetworkBehaviour::ConnectionHandler\">ConnectionHandler</a></h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated since 0.42.0: Use one or more of <code>NetworkBehaviour::{handle_pending_inbound_connection,handle_established_inbound_connection,handle_pending_outbound_connection,handle_established_outbound_connection}</code> instead.</span></div></span><div class='docblock'>Creates a new <a href=\"libp2p_swarm/handler/trait.ConnectionHandler.html\" title=\"trait libp2p_swarm::handler::ConnectionHandler\"><code>ConnectionHandler</code></a> for a connection with a peer. <a href=\"libp2p_swarm/behaviour/trait.NetworkBehaviour.html#method.new_handler\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.handle_pending_inbound_connection\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/libp2p_swarm/behaviour.rs.html#162-167\">source</a><a href=\"#method.handle_pending_inbound_connection\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"libp2p_swarm/behaviour/trait.NetworkBehaviour.html#method.handle_pending_inbound_connection\" class=\"fn\">handle_pending_inbound_connection</a>(\n    &amp;mut self,\n    _connection_id: <a class=\"struct\" href=\"libp2p_swarm/connection/struct.ConnectionId.html\" title=\"struct libp2p_swarm::connection::ConnectionId\">ConnectionId</a>,\n    _local_addr: &amp;<a class=\"struct\" href=\"multiaddr/struct.Multiaddr.html\" title=\"struct multiaddr::Multiaddr\">Multiaddr</a>,\n    _remote_addr: &amp;<a class=\"struct\" href=\"multiaddr/struct.Multiaddr.html\" title=\"struct multiaddr::Multiaddr\">Multiaddr</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.78.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"libp2p_swarm/struct.ConnectionDenied.html\" title=\"struct libp2p_swarm::ConnectionDenied\">ConnectionDenied</a>&gt;</h4></section></summary><div class='docblock'>Callback that is invoked for every new inbound connection. <a href=\"libp2p_swarm/behaviour/trait.NetworkBehaviour.html#method.handle_pending_inbound_connection\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.handle_pending_outbound_connection\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/libp2p_swarm/behaviour.rs.html#207-213\">source</a><a href=\"#method.handle_pending_outbound_connection\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"libp2p_swarm/behaviour/trait.NetworkBehaviour.html#method.handle_pending_outbound_connection\" class=\"fn\">handle_pending_outbound_connection</a>(\n    &amp;mut self,\n    _connection_id: <a class=\"struct\" href=\"libp2p_swarm/connection/struct.ConnectionId.html\" title=\"struct libp2p_swarm::connection::ConnectionId\">ConnectionId</a>,\n    maybe_peer: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.78.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"libp2p_identity/peer_id/struct.PeerId.html\" title=\"struct libp2p_identity::peer_id::PeerId\">PeerId</a>&gt;,\n    _addresses: &amp;[<a class=\"struct\" href=\"multiaddr/struct.Multiaddr.html\" title=\"struct multiaddr::Multiaddr\">Multiaddr</a>],\n    _effective_role: <a class=\"enum\" href=\"libp2p_core/connection/enum.Endpoint.html\" title=\"enum libp2p_core::connection::Endpoint\">Endpoint</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.78.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.78.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"multiaddr/struct.Multiaddr.html\" title=\"struct multiaddr::Multiaddr\">Multiaddr</a>&gt;, <a class=\"struct\" href=\"libp2p_swarm/struct.ConnectionDenied.html\" title=\"struct libp2p_swarm::ConnectionDenied\">ConnectionDenied</a>&gt;</h4></section></summary><div class='docblock'>Callback that is invoked for every outbound connection attempt. <a href=\"libp2p_swarm/behaviour/trait.NetworkBehaviour.html#method.handle_pending_outbound_connection\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.addresses_of_peer\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/libp2p_swarm/behaviour.rs.html#252\">source</a><a href=\"#method.addresses_of_peer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"libp2p_swarm/behaviour/trait.NetworkBehaviour.html#method.addresses_of_peer\" class=\"fn\">addresses_of_peer</a>(&amp;mut self, _: &amp;<a class=\"struct\" href=\"libp2p_identity/peer_id/struct.PeerId.html\" title=\"struct libp2p_identity::peer_id::PeerId\">PeerId</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.78.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"multiaddr/struct.Multiaddr.html\" title=\"struct multiaddr::Multiaddr\">Multiaddr</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>NetworkBehaviour::handle_pending_outbound_connection</code> instead.</span></div></span><div class='docblock'>Addresses that this behaviour is aware of for this specific peer, and that may allow\nreaching the peer. <a href=\"libp2p_swarm/behaviour/trait.NetworkBehaviour.html#method.addresses_of_peer\">Read more</a></div></details></div></details>","NetworkBehaviour","libp2p_ping::Ping"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()