(function() {var type_impls = {
"libp2p_request_response":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ConnectionHandler-for-Handler%3CTCodec%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/libp2p_request_response/handler_priv.rs.html#281-431\">source</a><a href=\"#impl-ConnectionHandler-for-Handler%3CTCodec%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;TCodec&gt; <a class=\"trait\" href=\"libp2p_swarm/handler/trait.ConnectionHandler.html\" title=\"trait libp2p_swarm::handler::ConnectionHandler\">ConnectionHandler</a> for <a class=\"struct\" href=\"libp2p_request_response/handler/struct.Handler.html\" title=\"struct libp2p_request_response::handler::Handler\">Handler</a>&lt;TCodec&gt;<div class=\"where\">where\n    TCodec: <a class=\"trait\" href=\"libp2p_request_response/codec/trait.Codec.html\" title=\"trait libp2p_request_response::codec::Codec\">Codec</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.InEvent\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.InEvent\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"libp2p_swarm/handler/trait.ConnectionHandler.html#associatedtype.InEvent\" class=\"associatedtype\">InEvent</a> = <a class=\"struct\" href=\"libp2p_request_response/handler/struct.RequestProtocol.html\" title=\"struct libp2p_request_response::handler::RequestProtocol\">RequestProtocol</a>&lt;TCodec&gt;</h4></section></summary><div class='docblock'>Custom event that can be received from the outside.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.OutEvent\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.OutEvent\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"libp2p_swarm/handler/trait.ConnectionHandler.html#associatedtype.OutEvent\" class=\"associatedtype\">OutEvent</a> = <a class=\"enum\" href=\"libp2p_request_response/handler/enum.Event.html\" title=\"enum libp2p_request_response::handler::Event\">Event</a>&lt;TCodec&gt;</h4></section></summary><div class='docblock'>Custom event that can be produced by the handler and that will be returned to the outside.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"libp2p_swarm/handler/trait.ConnectionHandler.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"libp2p_swarm/handler/enum.ConnectionHandlerUpgrErr.html\" title=\"enum libp2p_swarm::handler::ConnectionHandlerUpgrErr\">ConnectionHandlerUpgrErr</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>The type of errors returned by <a href=\"libp2p_swarm/handler/trait.ConnectionHandler.html#tymethod.poll\" title=\"method libp2p_swarm::handler::ConnectionHandler::poll\"><code>ConnectionHandler::poll</code></a>.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.InboundProtocol\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.InboundProtocol\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"libp2p_swarm/handler/trait.ConnectionHandler.html#associatedtype.InboundProtocol\" class=\"associatedtype\">InboundProtocol</a> = <a class=\"struct\" href=\"libp2p_request_response/handler/struct.ResponseProtocol.html\" title=\"struct libp2p_request_response::handler::ResponseProtocol\">ResponseProtocol</a>&lt;TCodec&gt;</h4></section></summary><div class='docblock'>The inbound upgrade for the protocol(s) used by the handler.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.OutboundProtocol\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.OutboundProtocol\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"libp2p_swarm/handler/trait.ConnectionHandler.html#associatedtype.OutboundProtocol\" class=\"associatedtype\">OutboundProtocol</a> = <a class=\"struct\" href=\"libp2p_request_response/handler/struct.RequestProtocol.html\" title=\"struct libp2p_request_response::handler::RequestProtocol\">RequestProtocol</a>&lt;TCodec&gt;</h4></section></summary><div class='docblock'>The outbound upgrade for the protocol(s) used by the handler.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.OutboundOpenInfo\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.OutboundOpenInfo\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"libp2p_swarm/handler/trait.ConnectionHandler.html#associatedtype.OutboundOpenInfo\" class=\"associatedtype\">OutboundOpenInfo</a> = <a class=\"struct\" href=\"libp2p_request_response/struct.RequestId.html\" title=\"struct libp2p_request_response::RequestId\">RequestId</a></h4></section></summary><div class='docblock'>The type of additional information passed to an <code>OutboundSubstreamRequest</code>.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.InboundOpenInfo\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.InboundOpenInfo\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"libp2p_swarm/handler/trait.ConnectionHandler.html#associatedtype.InboundOpenInfo\" class=\"associatedtype\">InboundOpenInfo</a> = <a class=\"struct\" href=\"libp2p_request_response/struct.RequestId.html\" title=\"struct libp2p_request_response::RequestId\">RequestId</a></h4></section></summary><div class='docblock'>The type of additional information returned from <code>listen_protocol</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.listen_protocol\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/libp2p_request_response/handler_priv.rs.html#293-325\">source</a><a href=\"#method.listen_protocol\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"libp2p_swarm/handler/trait.ConnectionHandler.html#tymethod.listen_protocol\" class=\"fn\">listen_protocol</a>(\n    &amp;self\n) -&gt; <a class=\"struct\" href=\"libp2p_swarm/handler/struct.SubstreamProtocol.html\" title=\"struct libp2p_swarm::handler::SubstreamProtocol\">SubstreamProtocol</a>&lt;Self::<a class=\"associatedtype\" href=\"libp2p_swarm/handler/trait.ConnectionHandler.html#associatedtype.InboundProtocol\" title=\"type libp2p_swarm::handler::ConnectionHandler::InboundProtocol\">InboundProtocol</a>, Self::<a class=\"associatedtype\" href=\"libp2p_swarm/handler/trait.ConnectionHandler.html#associatedtype.InboundOpenInfo\" title=\"type libp2p_swarm::handler::ConnectionHandler::InboundOpenInfo\">InboundOpenInfo</a>&gt;</h4></section></summary><div class='docblock'>The <a href=\"libp2p_core/upgrade/trait.InboundUpgrade.html\" title=\"trait libp2p_core::upgrade::InboundUpgrade\"><code>InboundUpgrade</code></a> to apply on inbound\nsubstreams to negotiate the desired protocols. <a href=\"libp2p_swarm/handler/trait.ConnectionHandler.html#tymethod.listen_protocol\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_behaviour_event\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/libp2p_request_response/handler_priv.rs.html#327-330\">source</a><a href=\"#method.on_behaviour_event\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"libp2p_swarm/handler/trait.ConnectionHandler.html#tymethod.on_behaviour_event\" class=\"fn\">on_behaviour_event</a>(&amp;mut self, request: Self::<a class=\"associatedtype\" href=\"libp2p_swarm/handler/trait.ConnectionHandler.html#associatedtype.InEvent\" title=\"type libp2p_swarm::handler::ConnectionHandler::InEvent\">InEvent</a>)</h4></section></summary><div class='docblock'>Informs the handler about an event from the <a href=\"libp2p_swarm/behaviour/trait.NetworkBehaviour.html\" title=\"trait libp2p_swarm::behaviour::NetworkBehaviour\"><code>NetworkBehaviour</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.connection_keep_alive\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/libp2p_request_response/handler_priv.rs.html#332-334\">source</a><a href=\"#method.connection_keep_alive\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"libp2p_swarm/handler/trait.ConnectionHandler.html#tymethod.connection_keep_alive\" class=\"fn\">connection_keep_alive</a>(&amp;self) -&gt; <a class=\"enum\" href=\"libp2p_swarm/handler/enum.KeepAlive.html\" title=\"enum libp2p_swarm::handler::KeepAlive\">KeepAlive</a></h4></section></summary><div class='docblock'>Returns until when the connection should be kept alive. <a href=\"libp2p_swarm/handler/trait.ConnectionHandler.html#tymethod.connection_keep_alive\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/libp2p_request_response/handler_priv.rs.html#336-398\">source</a><a href=\"#method.poll\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"libp2p_swarm/handler/trait.ConnectionHandler.html#tymethod.poll\" class=\"fn\">poll</a>(\n    &amp;mut self,\n    cx: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/task/wake/struct.Context.html\" title=\"struct core::task::wake::Context\">Context</a>&lt;'_&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/task/poll/enum.Poll.html\" title=\"enum core::task::poll::Poll\">Poll</a>&lt;<a class=\"enum\" href=\"libp2p_swarm/handler/enum.ConnectionHandlerEvent.html\" title=\"enum libp2p_swarm::handler::ConnectionHandlerEvent\">ConnectionHandlerEvent</a>&lt;<a class=\"struct\" href=\"libp2p_request_response/handler/struct.RequestProtocol.html\" title=\"struct libp2p_request_response::handler::RequestProtocol\">RequestProtocol</a>&lt;TCodec&gt;, <a class=\"struct\" href=\"libp2p_request_response/struct.RequestId.html\" title=\"struct libp2p_request_response::RequestId\">RequestId</a>, Self::<a class=\"associatedtype\" href=\"libp2p_swarm/handler/trait.ConnectionHandler.html#associatedtype.OutEvent\" title=\"type libp2p_swarm::handler::ConnectionHandler::OutEvent\">OutEvent</a>, Self::<a class=\"associatedtype\" href=\"libp2p_swarm/handler/trait.ConnectionHandler.html#associatedtype.Error\" title=\"type libp2p_swarm::handler::ConnectionHandler::Error\">Error</a>&gt;&gt;</h4></section></summary><div class='docblock'>Should behave like <code>Stream::poll()</code>.</div></details><section id=\"method.on_connection_event\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/libp2p_request_response/handler_priv.rs.html#400-430\">source</a><a href=\"#method.on_connection_event\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"libp2p_swarm/handler/trait.ConnectionHandler.html#tymethod.on_connection_event\" class=\"fn\">on_connection_event</a>(\n    &amp;mut self,\n    event: <a class=\"enum\" href=\"libp2p_swarm/handler/enum.ConnectionEvent.html\" title=\"enum libp2p_swarm::handler::ConnectionEvent\">ConnectionEvent</a>&lt;'_, Self::<a class=\"associatedtype\" href=\"libp2p_swarm/handler/trait.ConnectionHandler.html#associatedtype.InboundProtocol\" title=\"type libp2p_swarm::handler::ConnectionHandler::InboundProtocol\">InboundProtocol</a>, Self::<a class=\"associatedtype\" href=\"libp2p_swarm/handler/trait.ConnectionHandler.html#associatedtype.OutboundProtocol\" title=\"type libp2p_swarm::handler::ConnectionHandler::OutboundProtocol\">OutboundProtocol</a>, Self::<a class=\"associatedtype\" href=\"libp2p_swarm/handler/trait.ConnectionHandler.html#associatedtype.InboundOpenInfo\" title=\"type libp2p_swarm::handler::ConnectionHandler::InboundOpenInfo\">InboundOpenInfo</a>, Self::<a class=\"associatedtype\" href=\"libp2p_swarm/handler/trait.ConnectionHandler.html#associatedtype.OutboundOpenInfo\" title=\"type libp2p_swarm::handler::ConnectionHandler::OutboundOpenInfo\">OutboundOpenInfo</a>&gt;\n)</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.map_in_event\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/libp2p_swarm/handler.rs.html#156-159\">source</a><a href=\"#method.map_in_event\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"libp2p_swarm/handler/trait.ConnectionHandler.html#method.map_in_event\" class=\"fn\">map_in_event</a>&lt;TNewIn, TMap&gt;(self, map: TMap) -&gt; <a class=\"struct\" href=\"libp2p_swarm/handler/map_in/struct.MapInEvent.html\" title=\"struct libp2p_swarm::handler::map_in::MapInEvent\">MapInEvent</a>&lt;Self, TNewIn, TMap&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    TMap: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;TNewIn</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;Self::<a class=\"associatedtype\" href=\"libp2p_swarm/handler/trait.ConnectionHandler.html#associatedtype.InEvent\" title=\"type libp2p_swarm::handler::ConnectionHandler::InEvent\">InEvent</a>&gt;,</div></h4></section></summary><div class='docblock'>Adds a closure that turns the input event into something else.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map_out_event\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/libp2p_swarm/handler.rs.html#165-168\">source</a><a href=\"#method.map_out_event\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"libp2p_swarm/handler/trait.ConnectionHandler.html#method.map_out_event\" class=\"fn\">map_out_event</a>&lt;TMap, TNewOut&gt;(self, map: TMap) -&gt; <a class=\"struct\" href=\"libp2p_swarm/handler/map_out/struct.MapOutEvent.html\" title=\"struct libp2p_swarm::handler::map_out::MapOutEvent\">MapOutEvent</a>&lt;Self, TMap&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    TMap: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"libp2p_swarm/handler/trait.ConnectionHandler.html#associatedtype.OutEvent\" title=\"type libp2p_swarm::handler::ConnectionHandler::OutEvent\">OutEvent</a>) -&gt; TNewOut,</div></h4></section></summary><div class='docblock'>Adds a closure that turns the output event into something else.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.select\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/libp2p_swarm/handler.rs.html#179-181\">source</a><a href=\"#method.select\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"libp2p_swarm/handler/trait.ConnectionHandler.html#method.select\" class=\"fn\">select</a>&lt;TProto2&gt;(\n    self,\n    other: TProto2\n) -&gt; <a class=\"struct\" href=\"libp2p_swarm/handler/select/struct.ConnectionHandlerSelect.html\" title=\"struct libp2p_swarm::handler::select::ConnectionHandlerSelect\">ConnectionHandlerSelect</a>&lt;Self, TProto2&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates a new <a href=\"libp2p_swarm/handler/trait.ConnectionHandler.html\" title=\"trait libp2p_swarm::handler::ConnectionHandler\"><code>ConnectionHandler</code></a> that selects either this handler or\n<code>other</code> by delegating methods calls appropriately. <a href=\"libp2p_swarm/handler/trait.ConnectionHandler.html#method.select\">Read more</a></div></details></div></details>","ConnectionHandler","libp2p_request_response::handler_priv::RequestResponseHandler"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()