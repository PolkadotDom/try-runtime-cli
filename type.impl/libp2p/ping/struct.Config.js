(function() {var type_impls = {
"libp2p":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Config\" class=\"impl\"><a class=\"src rightside\" href=\"src/libp2p_ping/handler.rs.html#61\">source</a><a href=\"#impl-Config\" class=\"anchor\">¬ß</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"libp2p/ping/struct.Config.html\" title=\"struct libp2p::ping::Config\">Config</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/libp2p_ping/handler.rs.html#79\">source</a><h4 class=\"code-header\">pub fn <a href=\"libp2p/ping/struct.Config.html#tymethod.new\" class=\"fn\">new</a>() -&gt; <a class=\"struct\" href=\"libp2p/ping/struct.Config.html\" title=\"struct libp2p::ping::Config\">Config</a></h4></section></summary><div class=\"docblock\"><p>Creates a new <a href=\"libp2p/ping/struct.Config.html\" title=\"struct libp2p::ping::Config\"><code>Config</code></a> with the following default settings:</p>\n<ul>\n<li><a href=\"libp2p/ping/struct.Config.html#method.with_interval\" title=\"method libp2p::ping::Config::with_interval\"><code>Config::with_interval</code></a> 15s</li>\n<li><a href=\"libp2p/ping/struct.Config.html#method.with_timeout\" title=\"method libp2p::ping::Config::with_timeout\"><code>Config::with_timeout</code></a> 20s</li>\n<li><a href=\"libp2p/ping/struct.Config.html#method.with_max_failures\" title=\"method libp2p::ping::Config::with_max_failures\"><code>Config::with_max_failures</code></a> 1</li>\n<li><a href=\"libp2p/ping/struct.Config.html#method.with_keep_alive\" title=\"method libp2p::ping::Config::with_keep_alive\"><code>Config::with_keep_alive</code></a> false</li>\n</ul>\n<p>These settings have the following effect:</p>\n<ul>\n<li>A ping is sent every 15 seconds on a healthy connection.</li>\n<li>Every ping sent must yield a response within 20 seconds in order to\nbe successful.</li>\n<li>A single ping failure is sufficient for the connection to be subject\nto being closed.</li>\n<li>The connection may be closed at any time as far as the ping protocol\nis concerned, i.e. the ping protocol itself does not keep the\nconnection alive.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_timeout\" class=\"method\"><a class=\"src rightside\" href=\"src/libp2p_ping/handler.rs.html#89\">source</a><h4 class=\"code-header\">pub fn <a href=\"libp2p/ping/struct.Config.html#tymethod.with_timeout\" class=\"fn\">with_timeout</a>(self, d: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/time/struct.Duration.html\" title=\"struct core::time::Duration\">Duration</a>) -&gt; <a class=\"struct\" href=\"libp2p/ping/struct.Config.html\" title=\"struct libp2p::ping::Config\">Config</a></h4></section></summary><div class=\"docblock\"><p>Sets the ping timeout.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_interval\" class=\"method\"><a class=\"src rightside\" href=\"src/libp2p_ping/handler.rs.html#95\">source</a><h4 class=\"code-header\">pub fn <a href=\"libp2p/ping/struct.Config.html#tymethod.with_interval\" class=\"fn\">with_interval</a>(self, d: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/time/struct.Duration.html\" title=\"struct core::time::Duration\">Duration</a>) -&gt; <a class=\"struct\" href=\"libp2p/ping/struct.Config.html\" title=\"struct libp2p::ping::Config\">Config</a></h4></section></summary><div class=\"docblock\"><p>Sets the ping interval.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_max_failures\" class=\"method\"><a class=\"src rightside\" href=\"src/libp2p_ping/handler.rs.html#102\">source</a><h4 class=\"code-header\">pub fn <a href=\"libp2p/ping/struct.Config.html#tymethod.with_max_failures\" class=\"fn\">with_max_failures</a>(self, n: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/num/nonzero/struct.NonZeroU32.html\" title=\"struct core::num::nonzero::NonZeroU32\">NonZeroU32</a>) -&gt; <a class=\"struct\" href=\"libp2p/ping/struct.Config.html\" title=\"struct libp2p::ping::Config\">Config</a></h4></section></summary><div class=\"docblock\"><p>Sets the maximum number of consecutive ping failures upon which the remote\npeer is considered unreachable and the connection closed.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_keep_alive\" class=\"method\"><a class=\"src rightside\" href=\"src/libp2p_ping/handler.rs.html#121\">source</a><h4 class=\"code-header\">pub fn <a href=\"libp2p/ping/struct.Config.html#tymethod.with_keep_alive\" class=\"fn\">with_keep_alive</a>(self, b: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"struct\" href=\"libp2p/ping/struct.Config.html\" title=\"struct libp2p::ping::Config\">Config</a></h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">üëé</span><span>Deprecated since 0.40.0: Use <code>libp2p::swarm::behaviour::KeepAlive</code> if you need to keep connections alive unconditionally.</span></div></span></summary><div class=\"docblock\"><p>Sets whether the ping protocol itself should keep the connection alive,\napart from the maximum allowed failures.</p>\n<p>By default, the ping protocol itself allows the connection to be closed\nat any time, i.e. in the absence of ping failures the connection lifetime\nis determined by other protocol handlers.</p>\n<p>If the maximum number of allowed ping failures is reached, the\nconnection is always terminated as a result of <a href=\"libp2p/swarm/trait.ConnectionHandler.html#tymethod.poll\" title=\"method libp2p::swarm::ConnectionHandler::poll\"><code>ConnectionHandler::poll</code></a>\nreturning an error, regardless of the keep-alive setting.</p>\n</div></details></div></details>",0,"libp2p::ping::PingConfig"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Config\" class=\"impl\"><a class=\"src rightside\" href=\"src/libp2p_ping/handler.rs.html#45\">source</a><a href=\"#impl-Clone-for-Config\" class=\"anchor\">¬ß</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"libp2p/ping/struct.Config.html\" title=\"struct libp2p::ping::Config\">Config</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/libp2p_ping/handler.rs.html#45\">source</a><a href=\"#method.clone\" class=\"anchor\">¬ß</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"libp2p/ping/struct.Config.html\" title=\"struct libp2p::ping::Config\">Config</a></h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ¬∑ <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">¬ß</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","libp2p::ping::PingConfig"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-Config\" class=\"impl\"><a class=\"src rightside\" href=\"src/libp2p_ping/handler.rs.html#127\">source</a><a href=\"#impl-Default-for-Config\" class=\"anchor\">¬ß</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"libp2p/ping/struct.Config.html\" title=\"struct libp2p::ping::Config\">Config</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/libp2p_ping/handler.rs.html#128\">source</a><a href=\"#method.default\" class=\"anchor\">¬ß</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"struct\" href=\"libp2p/ping/struct.Config.html\" title=\"struct libp2p::ping::Config\">Config</a></h4></section></summary><div class='docblock'>Returns the ‚Äúdefault value‚Äù for a type. <a href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","libp2p::ping::PingConfig"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Config\" class=\"impl\"><a class=\"src rightside\" href=\"src/libp2p_ping/handler.rs.html#45\">source</a><a href=\"#impl-Debug-for-Config\" class=\"anchor\">¬ß</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"libp2p/ping/struct.Config.html\" title=\"struct libp2p::ping::Config\">Config</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/libp2p_ping/handler.rs.html#45\">source</a><a href=\"#method.fmt\" class=\"anchor\">¬ß</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.76.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","libp2p::ping::PingConfig"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()